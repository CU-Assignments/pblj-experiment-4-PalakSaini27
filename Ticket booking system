class TicketBooking implements Runnable {
    private static int availableSeats = 10;  // Total seats available
    private String customerName;
    private boolean isVIP;  // To simulate VIP customers

    public TicketBooking(String customerName, boolean isVIP) {
        this.customerName = customerName;
        this.isVIP = isVIP;
    }

    @Override
    public void run() {
        synchronized (TicketBooking.class) {  // Synchronizing to avoid double booking
            if (availableSeats > 0) {
                System.out.println(customerName + " is booking a seat...");
                try {
                    // Simulate booking time
                    Thread.sleep(500);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                availableSeats--;
                System.out.println(customerName + " booked a seat successfully. Remaining seats: " + availableSeats);
            } else {
                System.out.println(customerName + ": Sorry, no seats available.");
            }
        }
    }

    public static void main(String[] args) {
        // Simulate different customers trying to book tickets
        TicketBooking customer1 = new TicketBooking("Palak (VIP)", true);
        TicketBooking customer2 = new TicketBooking("Harsh", false);
        TicketBooking customer3 = new TicketBooking("Vallika (VIP)", true);
        TicketBooking customer4 = new TicketBooking("Shivani", false);
        TicketBooking customer5 = new TicketBooking("Priyanka (VIP)", true);

        Thread thread1 = new Thread(customer1);
        Thread thread2 = new Thread(customer2);
        Thread thread3 = new Thread(customer3);
        Thread thread4 = new Thread(customer4);
        Thread thread5 = new Thread(customer5);

        // Set VIP thread priority higher (VIP threads should get higher priority)
        thread1.setPriority(Thread.MAX_PRIORITY);  // Highest priority (VIP)
        thread3.setPriority(Thread.MAX_PRIORITY);  // Highest priority (VIP)
        thread5.setPriority(Thread.MAX_PRIORITY);  // Highest priority (VIP)

        // Set normal thread priority (non-VIP threads)
        thread2.setPriority(Thread.NORM_PRIORITY);  // Normal priority
        thread4.setPriority(Thread.NORM_PRIORITY);  // Normal priority

        // Start all threads
        thread1.start();
        thread2.start();
        thread3.start();
        thread4.start();
        thread5.start();
    }
}
